{
  "imageDecryptEval": "function getImages(){var G=typeof globalThis!=='undefined'?globalThis:(function(){return this||{}})();function def(k,v){try{if(!(k in G))G[k]=v;}catch(_){} } // --- polyfills ---\nif(typeof atob==='undefined'){def('atob',function(i){var c='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';var s=String(i).replace(/=+$/,'');var o='';for(var bc=0,bs,bf,idx=0;bf=s.charAt(idx++);~bf&&((bs=bc%4?bs*64+bf:bf),bc++%4)?o+=String.fromCharCode(255&bs>>(-2*bc&6)):0){bf=c.indexOf(bf);}return o;});}\nif(typeof btoa==='undefined'){def('btoa',function(i){var c='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';var s=String(i);var o='';for(var b,cc,idx=0,map=c;s.charAt(idx|0)||(map='=',idx%1);o+=map.charAt(63&b>>8-idx%1*8)){cc=s.charCodeAt(idx+=3/4);if(cc>255)throw new Error('btoa bad char');b=b<<8|cc;}return o;});}\n// --- safe stubs so eval won't break ---\ndef('dTfnT',function(){try{var args=arguments;var target=args[5];var token=args[7];if(Array.isArray(target)){target.push(token);} }catch(_){} });\n// many chapters pass through via this fn name pattern; make a safe default\nfunction __pass(k,s){return s;} def('c9ughMcrCCR',__pass);\n// --- pull and eval the chapter script ---\nvar src=(typeof _encryptedString==='string'?_encryptedString:'');if(!src){return [];}try{eval(src);}catch(_){}\n// --- try to discover finalize+array ---\nfunction keysOf(o){var a=[];try{a=Object.getOwnPropertyNames(o);}catch(_){} for(var k in o){if(a.indexOf(k)<0)a.push(k);}return a;}\nfunction isStr(x){return typeof x==='string';}\nfunction looksUrl(s){return /^https?:\\/\\//i.test(s);}function looksGoodUrl(s){return looksUrl(s)&&/(bp\\.blogspot|blogger|googleusercontent|\\.(jpg|jpeg|png|webp))(\\?|$)/i.test(s);} \n// 1) Try regex on the loader line (supports attr, hex 'attr', and setAttribute variants)\nvar m=null;var pats=[/attr\\(['\\\"]src['\\\"],\\s*([A-Za-z_$][\\w$]*)\\(\\s*\\d+\\s*,\\s*([A-Za-z_$][\\w$]*)\\[\\s*currImage\\s*\\]\\)\\)/,/\\['\\\\x61\\\\x74\\\\x74\\\\x72'\\]\\('\\x73\\x72\\x63',\\s*([A-Za-z_$][\\w$]*)\\(\\s*\\d+\\s*,\\s*([A-Za-z_$][\\w$]*)\\[\\s*currImage\\s*\\]\\)\\)/,/setAttribute\\(['\\\"]src['\\\"],\\s*([A-Za-z_$][\\w$]*)\\(\\s*\\d+\\s*,\\s*([A-Za-z_$][\\w$]*)\\[\\s*currImage\\s*\\]\\)\\)/];\nfor(var pi=0;pi<pats.length&&!m;pi++){m=src.match(pats[pi]);}\nvar finalizeName=null,arrayName=null;if(m){finalizeName=m[1];arrayName=m[2];}\n// 2) If regex failed, brute-force: find candidate arrays & functions and probe\nfunction discoverByProbe(){var keys=keysOf(G);var arrs=[];for(var i=0;i<keys.length;i++){var k=keys[i];var v;try{v=G[k];}catch(_){continue;} if(Array.isArray(v)&&v.length>=2){var strCnt=0,hasHttp=false;for(var j=0;j<Math.min(6,v.length);j++){if(isStr(v[j])){strCnt++;if(looksUrl(v[j]))hasHttp=true;}} if(strCnt>=2&&!hasHttp)arrs.push({name:k,ref:v});}\n}\nvar fns=[];var keys2=keysOf(G);for(var i2=0;i2<keys2.length;i2++){var k2=keys2[i2];var fn;try{fn=G[k2];}catch(_){continue;} if(typeof fn==='function')fns.push({name:k2,ref:fn});}\nfunction tryPair(fn,arr){var ok=0,tests=Math.min(6,arr.length);if(tests===0)return false;for(var t=0;t<tests;t++){var token=arr[t];try{var u=fn(5,token);if(isStr(u)&&looksGoodUrl(u)) ok++;}catch(_){} }return ok>=Math.max(2,Math.ceil(tests/2));}\nfor(var a=0;a<arrs.length;a++){for(var f=0;f<fns.length;f++){if(tryPair(fns[f].ref,arrs[a].ref)){return {fn:fns[f].name,arr:arrs[a].name};}}\n}return null;}\nif(!finalizeName||!arrayName){var found=discoverByProbe();if(found){finalizeName=found.fn;arrayName=found.arr;}}\nif(!finalizeName||!arrayName){return [];} var finalizeFn=G[finalizeName];var arr=G[arrayName];if(typeof finalizeFn!=='function'||!Array.isArray(arr)){return [];} \n// map and dedupe\nvar urls=[];for(var z=0;z<arr.length;z++){try{var u=finalizeFn(5,arr[z]);if(isStr(u))urls.push(u);}catch(_){} }var seen=new Set(),out=[];for(var q=0;q<urls.length;q++){var u2=String(urls[q]||'');var key=u2.split('?')[0];if(!key||seen.has(key))continue;seen.add(key);out.push(u2);}return out;}JSON.stringify(getImages());",
  "postDecryptEval": null,
  "shouldVerifyLinks": false
}
